{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbuzaid/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { iconStyle } from './arrivalHelpers';\nimport React, { Component, useState, useEffect } from 'react';\nimport Select, { InputActionMeta } from 'react-select';\nimport opts from './options.json';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = opts.options; // const arrivals =\n//   [\n//     { mins: 5, lineCode: 'N', lineName: 'Judah', direction: 'Outbound' },\n//     { mins: 7, lineCode: 'S', lineName: 'Shuttle', direction: 'Outbound' },\n//     { mins: 11, lineCode: 'M', lineName: 'Ocean View', direction: 'Outbound' },\n//     { mins: 12, lineCode: 'KT', lineName: 'KT: K Ingleside-T Third Street', direction: 'Outbound' },\n//   ]\n\nconst key = \"80b27b9e-f65e-4c32-960a-a40a076561ba\";\nconst REFRESH_TIME = 120000; // 2 mins  \n\nconst MAX_ARRIVALS = 7;\n\nfunction toTitleCase(str) {\n  return str.toLowerCase().replace(/(?:^|[\\s-/])\\w/g, function (match) {\n    return match.toUpperCase();\n  });\n}\n/** Retrieves the icon styling for a given line code. For instance, bus route\n * 30's style has a background color of rgb(0, 91, 149) and a text color \n * of white\n * \n */\n\n\nfunction Arrivals(props) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Arrivals\",\n    children: props.liProps.map(prop => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: ArrivalRow(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Arrivals;\n\nfunction Mins(props) {\n  switch (props.mins) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [\"Arriving \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrivingNow\",\n          children: \"now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minsNum\",\n          children: props.mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this), \" min away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minsNum\",\n          children: props.mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 34\n        }, this), \" mins away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n  }\n}\n\n_c2 = Mins;\n\nfunction longDirection(dir) {\n  switch (dir) {\n    case 'IB':\n      return 'Inbound';\n\n    case 'OB':\n      return 'Outbound';\n\n    default:\n      return dir;\n  }\n}\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\n\n\nfunction ArrivalRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ArrivalRow\",\n    children: [/*#__PURE__*/_jsxDEV(Mins, {\n      mins: props.mins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: iconStyle(props.lineCode),\n      className: \"lineIcon\",\n      children: props.lineCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lineName\",\n      children: toTitleCase(props.lineName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"direction\",\n      children: longDirection(props.direction)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = ArrivalRow;\n\nfunction computeArrivalMins(expectedArrivalTime) {\n  return Math.floor(Math.abs((Date.parse(expectedArrivalTime) - Date.now()) / 1000 / 60));\n}\n\nfunction createArrivals(data) {\n  return data === null || data === void 0 ? void 0 : data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit.map(x => x.MonitoredVehicleJourney).map(j => Object({\n    lineCode: j.LineRef,\n    lineName: j.PublishedLineName,\n    direction: j.DirectionRef,\n    destination: j.DestinationName,\n    mins: computeArrivalMins(j.MonitoredCall.ExpectedArrivalTime)\n  }));\n}\n\nfunction toTimeStr(date) {\n  return new Date(date).toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit'\n  });\n}\n\nfunction App() {\n  _s();\n\n  const [stop, setStop] = useState(options[0]);\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now());\n  const [arrivalList, setArrivals] = useState([]);\n  const [filteredLines, setFilteredLines] = useState(new Set());\n\n  function FetchData(stop) {\n    fetch(\"http://api.511.org/transit/StopMonitoring?api_key=\" + key + \"&agency=SF&format=json&stopcode=\" + stop.value).then(res => res.json()).then(res => {\n      setArrivals(createArrivals(res));\n    }).catch(error => console.log(error.message));\n  }\n\n  useEffect(() => {\n    setUpdateTime(Date.now());\n    FetchData(stop);\n    const interval = setInterval(() => {\n      setUpdateTime(Date.now());\n      FetchData(stop);\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, [stop]);\n\n  function HeaderRow(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upcoming trains/buses at\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bold\",\n          children: [\" \", props.station]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), \". Last updated at \", toTimeStr(props.lastUpdateTime), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh\",\n        onClick: () => {\n          setUpdateTime(Date.now());\n          FetchData(stop);\n        },\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 99\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n\n  function onChange(valueMeta, actionMeta) {\n    console.log(actionMeta.action);\n\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setStop(valueMeta);\n        FetchData(valueMeta);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const StopSelector = () => /*#__PURE__*/_jsxDEV(Select, {\n    id: \"StopSelector\",\n    options: options,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n\n  function Filtering() {\n    const lineCodes = [...new Set(arrivalList.map(x => x.lineCode))];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filtering\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }, this), lineCodes.map(x => {\n        if (!filteredLines.has(x)) {\n          return /*#__PURE__*/_jsxDEV(\"i\", {\n            style: iconStyle(x),\n            className: \"lineIconFilter\",\n            onClick: setFilteredLines(filteredLines.add(x)),\n            children: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              'background-color': 'gray'\n            },\n            className: \"lineIconFilter\",\n            onClick: () => {\n              filteredLines.delete(x);\n              setFilteredLines(filteredLines);\n            },\n            children: [\" \", x]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 20\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(HeaderRow, {\n        station: stop.label,\n        lastUpdateTime: lastUpdateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StopSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filtering, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arrivals, {\n        liProps: arrivalList.filter(x => !filteredLines.has(x.lineCode)).slice(0, MAX_ARRIVALS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KZWhK+kiJJrGHchng2fizx5XPUU=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Arrivals\");\n$RefreshReg$(_c2, \"Mins\");\n$RefreshReg$(_c3, \"ArrivalRow\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["iconStyle","React","Component","useState","useEffect","Select","InputActionMeta","opts","RefreshIcon","options","key","REFRESH_TIME","MAX_ARRIVALS","toTitleCase","str","toLowerCase","replace","match","toUpperCase","Arrivals","props","liProps","map","prop","ArrivalRow","Mins","mins","longDirection","dir","lineCode","lineName","direction","computeArrivalMins","expectedArrivalTime","Math","floor","abs","Date","parse","now","createArrivals","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","x","MonitoredVehicleJourney","j","Object","LineRef","PublishedLineName","DirectionRef","destination","DestinationName","MonitoredCall","ExpectedArrivalTime","toTimeStr","date","toLocaleTimeString","hour","minute","App","stop","setStop","lastUpdateTime","setUpdateTime","arrivalList","setArrivals","filteredLines","setFilteredLines","Set","FetchData","fetch","value","then","res","json","catch","error","console","log","message","interval","setInterval","clearInterval","HeaderRow","station","onChange","valueMeta","actionMeta","action","StopSelector","Filtering","lineCodes","has","add","delete","label","filter","slice"],"sources":["/Users/jamesbuzaid/Desktop/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { iconStyle } from './arrivalHelpers';\nimport React, { Component, useState, useEffect } from 'react'\nimport Select, { InputActionMeta } from 'react-select'\nimport opts from './options.json'\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nconst options = opts.options\n\n// const arrivals =\n//   [\n//     { mins: 5, lineCode: 'N', lineName: 'Judah', direction: 'Outbound' },\n//     { mins: 7, lineCode: 'S', lineName: 'Shuttle', direction: 'Outbound' },\n//     { mins: 11, lineCode: 'M', lineName: 'Ocean View', direction: 'Outbound' },\n//     { mins: 12, lineCode: 'KT', lineName: 'KT: K Ingleside-T Third Street', direction: 'Outbound' },\n//   ]\n\n\nconst key = \"80b27b9e-f65e-4c32-960a-a40a076561ba\"\nconst REFRESH_TIME = 120000; // 2 mins  \nconst MAX_ARRIVALS = 7;\n\nfunction toTitleCase(str) {\n  return str.toLowerCase().replace(/(?:^|[\\s-/])\\w/g, function (match) {\n    return match.toUpperCase();\n  });\n}\n\n/** Retrieves the icon styling for a given line code. For instance, bus route\n * 30's style has a background color of rgb(0, 91, 149) and a text color \n * of white\n * \n */\nfunction Arrivals(props) {\n  return <ul className='Arrivals'>{props.liProps.map(\n    (prop) => <li>{ArrivalRow(prop)}</li>\n  )}</ul>\n}\n\n\nfunction Mins(props) {\n  switch (props.mins) {\n    case 0:\n      return <p className='mins'>Arriving <span className='arrivingNow'>now</span></p>;\n    case 1:\n      return <p className='mins'><span className='minsNum'>{props.mins}</span> min away</p>;\n    default:\n      return <p className='mins'><span className='minsNum'>{props.mins}</span> mins away</p>;\n  }\n}\n\nfunction longDirection(dir) {\n  switch (dir) {\n    case 'IB':\n      return 'Inbound';\n    case 'OB':\n      return 'Outbound';\n    default:\n      return dir\n  }\n}\n\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\nfunction ArrivalRow(props) {\n  return <div className='ArrivalRow'>\n    <Mins mins={props.mins}></Mins>\n    <i style={iconStyle(props.lineCode)} className='lineIcon'>{props.lineCode}</i>\n    <p className='lineName'>{toTitleCase(props.lineName)}</p>\n    <p className='direction'>{longDirection(props.direction)}</p>\n  </div>;\n}\n\nfunction computeArrivalMins(expectedArrivalTime) {\n  return Math.floor(Math.abs((Date.parse(expectedArrivalTime) - Date.now()) / 1000 / 60));\n}\n\nfunction createArrivals(data) {\n  return data?.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit\n    .map(x => x.MonitoredVehicleJourney)\n    .map(j => Object({\n      lineCode: j.LineRef,\n      lineName: j.PublishedLineName,\n      direction: j.DirectionRef,\n      destination: j.DestinationName,\n      mins: computeArrivalMins(j.MonitoredCall.ExpectedArrivalTime)\n    }))\n}\n\n\nfunction toTimeStr(date) { return new Date(date).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' }) }\n\n\nfunction App() {\n  const [stop, setStop] = useState(options[0])\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now())\n  const [arrivalList, setArrivals] = useState([])\n  const [filteredLines, setFilteredLines] = useState(new Set())\n\n  function FetchData(stop) {\n    fetch(\"http://api.511.org/transit/StopMonitoring?api_key=\" + key + \"&agency=SF&format=json&stopcode=\" + stop.value)\n      .then(res => res.json())\n      .then(res => { setArrivals(createArrivals(res)) })\n      .catch(error => console.log(error.message));\n  }\n\n  useEffect(() => {\n    setUpdateTime(Date.now());\n    FetchData(stop);\n\n    const interval = setInterval(() => {\n      setUpdateTime(Date.now());\n      FetchData(stop);\n    }, REFRESH_TIME);\n\n    return () => clearInterval(interval);\n  }, [stop])\n\n\n  function HeaderRow(props) {\n    return <div className='Header'>\n      <p>\n        Upcoming trains/buses at\n        <span className='bold'> {props.station}</span>.\n        Last updated at {toTimeStr(props.lastUpdateTime)}.\n      </p>\n      <button className='refresh' onClick={() => { setUpdateTime(Date.now()); FetchData(stop); }}><RefreshIcon></RefreshIcon></button>\n    </div>\n  }\n\n\n  function onChange(valueMeta, actionMeta) {\n    console.log(actionMeta.action);\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setStop(valueMeta);\n        FetchData(valueMeta);\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  const StopSelector = () => (\n    <Select id=\"StopSelector\" options={options} onChange={onChange} />\n  );\n\n  function Filtering() {\n    const lineCodes = [...new Set(arrivalList.map(x => x.lineCode))];\n    return <div className='Filtering'>\n      <p>Filter:</p>\n      {\n        lineCodes.map((x) => {\n          if (!filteredLines.has(x)) {\n            return <i style={iconStyle(x)} className='lineIconFilter' onClick={setFilteredLines(filteredLines.add(x))}>{x}</i>\n          }\n          else {\n            return <i style={{ 'background-color': 'gray' }} className='lineIconFilter' onClick={() => {\n              filteredLines.delete(x);\n              setFilteredLines(filteredLines);\n            }}> {x}</i>\n          }\n        }\n        )\n      }\n    </div >\n  }\n\n  return (\n    <div id=\"app\">\n      <header>\n        <HeaderRow station={stop.label} lastUpdateTime={lastUpdateTime}></HeaderRow>\n\n        <StopSelector></StopSelector>\n        <Filtering></Filtering>\n        <Arrivals liProps={arrivalList.filter(x => !filteredLines.has(x.lineCode)).slice(0, MAX_ARRIVALS)}></Arrivals>\n\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}