{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbuzaid/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { iconStyle } from './arrivalHelpers';\nimport React, { Component, useState, useEffect } from 'react';\nimport Select, { InputActionMeta } from 'react-select';\nimport opts from './options.json';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer } from 'react-leaflet/MapContainer';\nimport { TileLayer } from 'react-leaflet/TileLayer';\nimport { useMap } from 'react-leaflet/hooks';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\nimport { height } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst key = \"80b27b9e-f65e-4c32-960a-a40a076561ba\";\nconst REFRESH_TIME = 120000; // 2 mins  \n\nconst MAX_ARRIVALS = 7;\n\nfunction toTitleCase(str) {\n  return str.toLowerCase().replace(/(?:^|[\\s-/])\\w/g, function (match) {\n    return match.toUpperCase();\n  });\n}\n/** A list of all arriving buses/trains */\n\n\nfunction Arrivals(props) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Arrivals\",\n    children: props.liProps.map(prop => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: ArrivalRow(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Arrivals;\n\nfunction Mins(props) {\n  switch (props.mins) {\n    case 0:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [\"Arriving \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"arrivingNow\",\n          children: \"now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n\n    case 1:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minsNum\",\n          children: props.mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this), \" min away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mins\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"minsNum\",\n          children: props.mins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 34\n        }, this), \" mins away\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n  }\n}\n\n_c2 = Mins;\n\nfunction longDirection(dir) {\n  switch (dir) {\n    case 'IB':\n      return 'Inbound';\n\n    case 'OB':\n      return 'Outbound';\n\n    case 'W':\n      return 'West';\n\n    case 'E':\n      return 'East';\n\n    case 'N':\n      return 'North';\n\n    case 'S':\n      return 'South';\n\n    default:\n      return dir;\n  }\n}\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\n\n\nfunction ArrivalRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ArrivalRow\",\n    children: [/*#__PURE__*/_jsxDEV(Mins, {\n      mins: props.mins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: iconStyle(props.lineCode),\n      className: \"lineIcon\",\n      children: props.lineCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lineName\",\n      children: toTitleCase(props.lineName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"direction\",\n      children: longDirection(props.direction)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = ArrivalRow;\n\nfunction computeMins(expectedArrivalTime) {\n  console.log(Date.parse(expectedArrivalTime) - Date.now());\n  console.log(Date.parse(expectedArrivalTime));\n  console.log(expectedArrivalTime);\n  return Math.floor(Math.abs((Date.parse(expectedArrivalTime) - Date.now()) / 1000 / 60));\n}\n\nfunction getExpectedTime(j) {\n  for (const time of [j.MonitoredCall.ExpectedDepartureTime, j.MonitoredCall.ExpectedArrivalTime]) {\n    if (time) {\n      return time;\n    }\n  }\n\n  return null;\n}\n\nfunction createArrivals(data) {\n  return data === null || data === void 0 ? void 0 : data.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit.map(x => x.MonitoredVehicleJourney).map(j => Object({\n    lineCode: j.LineRef,\n    lineName: j.PublishedLineName,\n    direction: j.DirectionRef,\n    destination: j.DestinationName,\n    mins: computeMins(getExpectedTime(j))\n  }));\n}\n\nfunction createStops(data) {\n  return data === null || data === void 0 ? void 0 : data.Contents.dataObjects.ScheduledStopPoint.map(x => Object({\n    value: x.id,\n    label: x.Name,\n    location: [x.Location.Latitude, x.Location.Longitude]\n  }));\n}\n\nfunction toTimeStr(date) {\n  return new Date(date).toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit'\n  });\n}\n\nfunction App() {\n  _s();\n\n  const [stop, setStop] = useState({\n    value: '16995',\n    label: 'Powell Station Outbound'\n  });\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now());\n  const [arrivalList, setArrivals] = useState([]);\n  const [filteredLines, setFilteredLines] = useState([]);\n  const [stops, setStops] = useState([]);\n\n  function FetchStops() {\n    fetch(`http://api.511.org/transit/stopplaces?api_key=${key}&operator_id=SF&format=json`).then(res => res.json()).then(res => {\n      setStops(createStops(res));\n    }).catch(error => console.log(error.message));\n  }\n\n  function FetchData(stop) {\n    console.log(\"Fetching data!\");\n    fetch(\"http://api.511.org/transit/StopMonitoring?api_key=\" + key + \"&agency=SF&format=json&stopcode=\" + stop.value).then(res => res.json()).then(res => {\n      setArrivals(createArrivals(res));\n    }).catch(error => console.log(error.message));\n  }\n\n  useEffect(() => {\n    setUpdateTime(Date.now());\n    FetchData(stop);\n    FetchStops();\n    const interval = setInterval(() => {\n      setUpdateTime(Date.now());\n      FetchData(stop);\n    }, REFRESH_TIME);\n    return () => clearInterval(interval);\n  }, [stop]);\n\n  function HeaderRow(props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upcoming trains/buses at\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bold\",\n          children: [\" \", props.station]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this), \". Last updated at \", toTimeStr(props.lastUpdateTime), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh\",\n        onClick: () => {\n          setUpdateTime(Date.now());\n          FetchData(stop);\n        },\n        children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 99\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n\n  function onChange(valueMeta, actionMeta) {\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setStop(valueMeta);\n        FetchData(valueMeta);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const StopSelector = () => /*#__PURE__*/_jsxDEV(Select, {\n    id: \"StopSelector\",\n    options: stops,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n\n  function filterIconStyle(lineCode) {\n    if (!filteredLines.includes(lineCode)) {\n      return iconStyle(lineCode);\n    } else {\n      return {\n        'backgroundColor': 'gray',\n        'color': 'lightgray'\n      };\n    }\n  }\n\n  function filterLineClick(lineCode) {\n    if (!filteredLines.includes(lineCode)) {\n      setFilteredLines(filteredLines.concat([lineCode]));\n    } else {\n      setFilteredLines(filteredLines.filter((v, _) => v !== lineCode));\n    }\n  }\n\n  function Filtering() {\n    var lineCodes = [...new Set(arrivalList.map(x => x.lineCode))];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filtering\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Filter:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this), lineCodes.map(x => {\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          style: filterIconStyle(x),\n          className: \"lineIconFilter\",\n          onClick: () => filterLineClick(x),\n          children: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 12\n    }, this);\n  }\n\n  function MarkerFromStop(props) {\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: props.stop.location,\n      icon: new Icon({\n        iconUrl: markerIconPng\n      }),\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [props.stop.label, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setUpdateTime(Date.now());\n            setStop(props.stop);\n            FetchData(props.stop);\n          },\n          children: \"Select this stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 12\n    }, this);\n  }\n\n  function MarkersFromStops(props) {\n    var markers = [];\n\n    for (var stop of props.stops) {\n      markers.push( /*#__PURE__*/_jsxDEV(MarkerFromStop, {\n        stop: stop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 20\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(HeaderRow, {\n        station: stop.label,\n        lastUpdateTime: lastUpdateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StopSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        className: \"Map\",\n        center: [37.7749, -122.4194],\n        zoom: 14,\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(MarkersFromStops, {\n            stops: stops\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filtering, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arrivals, {\n        liProps: arrivalList.filter(x => !filteredLines.includes(x.lineCode)).slice(0, MAX_ARRIVALS)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"WZ17BKWZW23aedqa0fLELhCUVAI=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Arrivals\");\n$RefreshReg$(_c2, \"Mins\");\n$RefreshReg$(_c3, \"ArrivalRow\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["iconStyle","React","Component","useState","useEffect","Select","InputActionMeta","opts","RefreshIcon","MapContainer","TileLayer","useMap","Marker","Popup","Icon","markerIconPng","height","key","REFRESH_TIME","MAX_ARRIVALS","toTitleCase","str","toLowerCase","replace","match","toUpperCase","Arrivals","props","liProps","map","prop","ArrivalRow","Mins","mins","longDirection","dir","lineCode","lineName","direction","computeMins","expectedArrivalTime","console","log","Date","parse","now","Math","floor","abs","getExpectedTime","j","time","MonitoredCall","ExpectedDepartureTime","ExpectedArrivalTime","createArrivals","data","ServiceDelivery","StopMonitoringDelivery","MonitoredStopVisit","x","MonitoredVehicleJourney","Object","LineRef","PublishedLineName","DirectionRef","destination","DestinationName","createStops","Contents","dataObjects","ScheduledStopPoint","value","id","label","Name","location","Location","Latitude","Longitude","toTimeStr","date","toLocaleTimeString","hour","minute","App","stop","setStop","lastUpdateTime","setUpdateTime","arrivalList","setArrivals","filteredLines","setFilteredLines","stops","setStops","FetchStops","fetch","then","res","json","catch","error","message","FetchData","interval","setInterval","clearInterval","HeaderRow","station","onChange","valueMeta","actionMeta","action","StopSelector","filterIconStyle","includes","filterLineClick","concat","filter","v","_","Filtering","lineCodes","Set","MarkerFromStop","iconUrl","MarkersFromStops","markers","push","slice"],"sources":["/Users/jamesbuzaid/Desktop/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { iconStyle } from './arrivalHelpers';\nimport React, { Component, useState, useEffect } from 'react'\nimport Select, { InputActionMeta } from 'react-select'\nimport opts from './options.json'\nimport RefreshIcon from '@mui/icons-material/Refresh';\n\nimport 'leaflet/dist/leaflet.css';\nimport { MapContainer } from 'react-leaflet/MapContainer';\nimport { TileLayer } from 'react-leaflet/TileLayer';\nimport { useMap } from 'react-leaflet/hooks';\nimport { Marker, Popup } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\"\nimport { height } from '@mui/system';\n\nconst key = \"80b27b9e-f65e-4c32-960a-a40a076561ba\"\nconst REFRESH_TIME = 120000; // 2 mins  \nconst MAX_ARRIVALS = 7;\n\nfunction toTitleCase(str) {\n  return str.toLowerCase().replace(/(?:^|[\\s-/])\\w/g, function (match) {\n    return match.toUpperCase();\n  });\n}\n\n/** A list of all arriving buses/trains */\nfunction Arrivals(props) {\n  return <ul className='Arrivals'>{props.liProps.map(\n    (prop) => <li>{ArrivalRow(prop)}</li>\n  )}</ul>\n}\n\n\nfunction Mins(props) {\n  switch (props.mins) {\n    case 0:\n      return <p className='mins'>Arriving <span className='arrivingNow'>now</span></p>;\n    case 1:\n      return <p className='mins'><span className='minsNum'>{props.mins}</span> min away</p>;\n    default:\n      return <p className='mins'><span className='minsNum'>{props.mins}</span> mins away</p>;\n  }\n}\n\nfunction longDirection(dir) {\n  switch (dir) {\n    case 'IB':\n      return 'Inbound';\n    case 'OB':\n      return 'Outbound';\n    case 'W':\n      return 'West';\n    case 'E':\n      return 'East';\n    case 'N':\n      return 'North';\n    case 'S':\n      return 'South';\n    default:\n      return dir;\n  }\n}\n\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\nfunction ArrivalRow(props) {\n  return <div className='ArrivalRow'>\n    <Mins mins={props.mins}></Mins>\n    <i style={iconStyle(props.lineCode)} className='lineIcon'>{props.lineCode}</i>\n    <p className='lineName'>{toTitleCase(props.lineName)}</p>\n    <p className='direction'>{longDirection(props.direction)}</p>\n  </div>;\n}\n\nfunction computeMins(expectedArrivalTime) {\n  console.log(Date.parse(expectedArrivalTime) - Date.now());\n  console.log(Date.parse(expectedArrivalTime));\n  console.log(expectedArrivalTime);\n  return Math.floor(Math.abs((Date.parse(expectedArrivalTime) - Date.now()) / 1000 / 60));\n}\n\nfunction getExpectedTime(j) {\n  for (const time of [j.MonitoredCall.ExpectedDepartureTime, j.MonitoredCall.ExpectedArrivalTime]) {\n    if (time) {\n      return time;\n    }\n  }\n  return null;\n}\n\nfunction createArrivals(data) {\n  return data?.ServiceDelivery.StopMonitoringDelivery.MonitoredStopVisit\n    .map(x => x.MonitoredVehicleJourney)\n    .map(j => Object({\n      lineCode: j.LineRef,\n      lineName: j.PublishedLineName,\n      direction: j.DirectionRef,\n      destination: j.DestinationName,\n      mins: computeMins(getExpectedTime(j))\n    }))\n}\n\nfunction createStops(data) {\n  return data?.Contents.dataObjects.ScheduledStopPoint\n    .map(x => Object({\n      value: x.id,\n      label: x.Name,\n      location: [x.Location.Latitude, x.Location.Longitude]\n    }))\n}\n\n\nfunction toTimeStr(date) { return new Date(date).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' }) }\n\n\nfunction App() {\n  const [stop, setStop] = useState({\n    value: '16995',\n    label: 'Powell Station Outbound'\n  });\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now());\n  const [arrivalList, setArrivals] = useState([]);\n  const [filteredLines, setFilteredLines] = useState([]);\n  const [stops, setStops] = useState([]);\n\n  function FetchStops() {\n    fetch(`http://api.511.org/transit/stopplaces?api_key=${key}&operator_id=SF&format=json`)\n      .then(res => res.json())\n      .then(res => { setStops(createStops(res)) })\n      .catch(error => console.log(error.message));\n  }\n\n  function FetchData(stop) {\n    console.log(\"Fetching data!\");\n    fetch(\"http://api.511.org/transit/StopMonitoring?api_key=\" + key + \"&agency=SF&format=json&stopcode=\" + stop.value)\n      .then(res => res.json())\n      .then(res => { setArrivals(createArrivals(res)) })\n      .catch(error => console.log(error.message));\n  }\n\n  useEffect(() => {\n    setUpdateTime(Date.now());\n    FetchData(stop);\n    FetchStops();\n\n    const interval = setInterval(() => {\n      setUpdateTime(Date.now());\n      FetchData(stop);\n    }, REFRESH_TIME);\n\n    return () => clearInterval(interval);\n  }, [stop])\n\n\n  function HeaderRow(props) {\n    return <div className='Header'>\n      <p>\n        Upcoming trains/buses at\n        <span className='bold'> {props.station}</span>.\n        Last updated at {toTimeStr(props.lastUpdateTime)}.\n      </p>\n      <button className='refresh' onClick={() => { setUpdateTime(Date.now()); FetchData(stop); }}><RefreshIcon></RefreshIcon></button>\n    </div>\n  }\n\n\n  function onChange(valueMeta, actionMeta) {\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setStop(valueMeta);\n        FetchData(valueMeta);\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  const StopSelector = () => (\n    <Select id=\"StopSelector\" options={stops} onChange={onChange} />\n  );\n\n  function filterIconStyle(lineCode) {\n    if (!filteredLines.includes(lineCode)) {\n      return iconStyle(lineCode);\n    }\n    else {\n      return { 'backgroundColor': 'gray', 'color': 'lightgray' };\n    }\n  }\n\n  function filterLineClick(lineCode) {\n    if (!filteredLines.includes(lineCode)) {\n      setFilteredLines(filteredLines.concat([lineCode]));\n    }\n    else {\n      setFilteredLines(filteredLines.filter((v, _) => v !== lineCode));\n    }\n  }\n\n  function Filtering() {\n    var lineCodes = [...new Set(arrivalList.map(x => x.lineCode))];\n    return <div className='Filtering'>\n      <p>Filter:</p>\n      {\n        lineCodes.map((x) => {\n          return <i style={filterIconStyle(x)} className='lineIconFilter' onClick={() => filterLineClick(x)}>{x}</i>;\n        }\n        )\n      }\n    </div >\n  }\n\n  function MarkerFromStop(props) {\n    return <Marker position={props.stop.location} icon={new Icon({ iconUrl: markerIconPng })}>\n      <Popup>\n        {props.stop.label} <br />\n        <button onClick={\n          () => {\n            setUpdateTime(Date.now());\n            setStop(props.stop);\n            FetchData(props.stop);\n          }\n        }>Select this stop</button>\n      </Popup>\n    </Marker>\n  }\n\n  function MarkersFromStops(props) {\n    var markers = [];\n    for (var stop of props.stops) {\n      markers.push(<MarkerFromStop stop={stop}></MarkerFromStop>);\n    }\n    return <div>{markers}</div>\n  }\n\n\n  return (\n    <div id=\"app\">\n      <header>\n        <HeaderRow station={stop.label} lastUpdateTime={lastUpdateTime}></HeaderRow>\n\n        <StopSelector></StopSelector>\n        <MapContainer className=\"Map\" center={[37.7749, -122.4194]} zoom={14} scrollWheelZoom={false}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <div>\n            <MarkersFromStops stops={stops}></MarkersFromStops>\n          </div>\n\n        </MapContainer>\n        <Filtering></Filtering>\n        <Arrivals liProps={arrivalList.filter(x => !filteredLines.includes(x.lineCode)).slice(0, MAX_ARRIVALS)}></Arrivals>\n\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}