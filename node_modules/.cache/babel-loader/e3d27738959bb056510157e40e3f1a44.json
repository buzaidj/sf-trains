{"ast":null,"code":"var _jsxFileName = \"/Users/jamesbuzaid/Desktop/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { iconStyle } from './icon_style';\nimport React, { Component, useState } from 'react';\nimport Select, { InputActionMeta } from 'react-select';\nimport opts from './options.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = opts.options;\nconst arrivals = [{\n  mins: 5,\n  lineCode: 'N',\n  lineName: 'Judah',\n  direction: 'Outbound'\n}, {\n  mins: 7,\n  lineCode: 'S',\n  lineName: 'Shuttle',\n  direction: 'Outbound'\n}, {\n  mins: 11,\n  lineCode: 'M',\n  lineName: 'Ocean View',\n  direction: 'Outbound'\n}, {\n  mins: 12,\n  lineCode: 'KT',\n  lineName: 'KT: K Ingleside-T Third Street',\n  direction: 'Outbound'\n}];\n/** Retrieves the icon styling for a given line code. For instance, bus route\n * 30's style has a background color of rgb(0, 91, 149) and a text color \n * of white\n * \n */\n\nfunction Arrivals(props) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"Arrivals\",\n    children: props.liProps.map(prop => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: ArrivalRow(prop)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\n\n\n_c = Arrivals;\n\nfunction ArrivalRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ArrivalRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mins\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"minsNum\",\n        children: props.mins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), \" mins away\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: iconStyle(props.lineCode),\n      className: \"lineIcon\",\n      children: props.lineCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lineName\",\n      children: props.lineName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"direction\",\n      children: props.direction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = ArrivalRow;\n\nfunction toTimeStr(date) {\n  return new Date(date).toLocaleTimeString([], {\n    hour: 'numeric',\n    minute: '2-digit'\n  });\n}\n\nfunction HeaderRow(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Header\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upcoming trains/buses at\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bold\",\n        children: [\" \", props.station]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), \". Last updated at \", toTimeStr(props.lastUpdateTime), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"refresh\",\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = HeaderRow;\n\nfunction App() {\n  _s();\n\n  const [choice, setChoice] = useState(options[0]);\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now());\n\n  function onChange(valueMeta, actionMeta) {\n    console.log(actionMeta.action);\n\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setChoice(valueMeta);\n    }\n  }\n\n  const StopSelector = () => /*#__PURE__*/_jsxDEV(Select, {\n    id: \"StopSelector\",\n    options: options,\n    onChange: onChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(HeaderRow, {\n        station: choice.label,\n        lastUpdateTime: lastUpdateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StopSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Arrivals, {\n        liProps: arrivals\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RnHS3zPHLnDTkc7CKRJ9Ko+Bj9g=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Arrivals\");\n$RefreshReg$(_c2, \"ArrivalRow\");\n$RefreshReg$(_c3, \"HeaderRow\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["iconStyle","React","Component","useState","Select","InputActionMeta","opts","options","arrivals","mins","lineCode","lineName","direction","Arrivals","props","liProps","map","prop","ArrivalRow","toTimeStr","date","Date","toLocaleTimeString","hour","minute","HeaderRow","station","lastUpdateTime","App","choice","setChoice","setUpdateTime","now","onChange","valueMeta","actionMeta","console","log","action","StopSelector","label"],"sources":["/Users/jamesbuzaid/Desktop/my-app/src/App.js"],"sourcesContent":["import './App.css';\nimport { iconStyle } from './icon_style';\nimport React, { Component, useState } from 'react'\nimport Select, { InputActionMeta } from 'react-select'\nimport opts from './options.json'\n\nconst options = opts.options\n\nconst arrivals =\n  [\n    { mins: 5, lineCode: 'N', lineName: 'Judah', direction: 'Outbound' },\n    { mins: 7, lineCode: 'S', lineName: 'Shuttle', direction: 'Outbound' },\n    { mins: 11, lineCode: 'M', lineName: 'Ocean View', direction: 'Outbound' },\n    { mins: 12, lineCode: 'KT', lineName: 'KT: K Ingleside-T Third Street', direction: 'Outbound' },\n  ]\n\n/** Retrieves the icon styling for a given line code. For instance, bus route\n * 30's style has a background color of rgb(0, 91, 149) and a text color \n * of white\n * \n */\n\nfunction Arrivals(props) {\n  return <ul className='Arrivals'>{props.liProps.map(\n    (prop) => <li>{ArrivalRow(prop)}</li>\n  )}</ul>\n}\n\n/** Returns a row for a given arrival with props mins \n * (an integer), lineCode (e.g. N), lineName (e.g. Judah) \n * and direction (e.g. outbound) */\nfunction ArrivalRow(props) {\n  return <div className='ArrivalRow'>\n    <p className='mins'><span className='minsNum'>{props.mins}</span> mins away</p>\n    <i style={iconStyle(props.lineCode)} className='lineIcon'>{props.lineCode}</i>\n    <p className='lineName'>{props.lineName}</p>\n    <p className='direction'>{props.direction}</p>\n  </div>;\n}\n\nfunction toTimeStr(date) { return new Date(date).toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' }) }\n\nfunction HeaderRow(props) {\n  return <div className='Header'>\n    <p>\n      Upcoming trains/buses at\n      <span className='bold'> {props.station}</span>.\n      Last updated at {toTimeStr(props.lastUpdateTime)}.\n    </p>\n    <button class='refresh'>Refresh</button>\n  </div>\n}\n\nfunction App() {\n  const [choice, setChoice] = useState(options[0])\n  const [lastUpdateTime, setUpdateTime] = useState(Date.now())\n\n  function onChange(valueMeta, actionMeta) {\n    console.log(actionMeta.action);\n    switch (actionMeta.action) {\n      case 'select-option':\n      case 'set-value':\n        setUpdateTime(Date.now());\n        setChoice(valueMeta);\n    }\n  }\n\n\n  const StopSelector = () => (\n    <Select id=\"StopSelector\" options={options} onChange={onChange} />\n  );\n\n\n  return (\n    <div id=\"app\">\n      <header>\n        <HeaderRow station={choice.label} lastUpdateTime={lastUpdateTime}></HeaderRow>\n\n        <StopSelector></StopSelector>\n        <Arrivals liProps={arrivals}></Arrivals>\n\n      </header>\n    </div >\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}